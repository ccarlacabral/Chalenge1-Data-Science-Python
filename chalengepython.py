# -*- coding: utf-8 -*-
"""ChalengePython.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tMimZagOzshsFHXXDUOj46vrQn7PJkDT

### Importa√ß√£o dos dados
"""

import pandas as pd

url = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_1.csv"
url2 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_2.csv"
url3 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_3.csv"
url4 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_4.csv"

loja = pd.read_csv(url)
loja2 = pd.read_csv(url2)
loja3 = pd.read_csv(url3)
loja4 = pd.read_csv(url4)

loja.head()

"""#1. An√°lise do faturamento

"""

# Calculando o faturamento total de cada loja
faturamento_loja1 = loja['Pre√ßo'].sum()
faturamento_loja2 = loja2['Pre√ßo'].sum()
faturamento_loja3 = loja3['Pre√ßo'].sum()
faturamento_loja4 = loja4['Pre√ßo'].sum()

# Exibindo os resultados
print(f"Faturamento Loja 1: R${faturamento_loja1:,.0f}")
print(f"Faturamento Loja 2: R${faturamento_loja2:,.0f}")
print(f"Faturamento Loja 3: R${faturamento_loja3:,.0f}")
print(f"Faturamento Loja 4: R${faturamento_loja4:,.0f}\n")


#Faturamento total

faturamento_total = faturamento_loja1 + faturamento_loja2 + faturamento_loja3 + faturamento_loja4
print(f"Faturamento Total: R${faturamento_total:,.0f}\n")

#Ordenar lojas por maior faturamento (descrescente) - Dicionario com os faturamentos

# Dicion√°rio com os faturamentos totais
faturamentos = {
    'Loja 1': faturamento_loja1,
    'Loja 2': faturamento_loja2,
    'Loja 3': faturamento_loja3,
    'Loja 4': faturamento_loja4,
}

# Transformando em DataFrame para ordenar
df_faturamento = pd.DataFrame.from_dict(faturamentos, orient='index', columns=['Faturamento Total'])
df_faturamento = df_faturamento.sort_values(by='Faturamento Total', ascending=False)

# Exibindo o ranking
print("Ranking das lojas por faturamento total (maior para menor):\n")
print(df_faturamento)

"""# 2. Vendas por Categoria

"""

#Acessar os valores unicos por categoria

# Concatenar as colunas de categorias das quatro lojas para obter valores unicos

todas_categorias = pd.concat([
    loja['Categoria do Produto'],
    loja2['Categoria do Produto'],
    loja3['Categoria do Produto'],
    loja4['Categoria do Produto']
])

categorias_unicas = todas_categorias.unique()

# Se quiser exibir como lista ordenada:
categorias_unicas_ordenadas = sorted(categorias_unicas)

print("Categorias:\n")
print(categorias_unicas_ordenadas)

#Vendas por categoria

# Faturamento por categoria em cada loja
faturamento_categoria_loja1 = loja.groupby('Categoria do Produto')['Pre√ßo'].sum()
faturamento_categoria_loja2 = loja2.groupby('Categoria do Produto')['Pre√ßo'].sum()
faturamento_categoria_loja3 = loja3.groupby('Categoria do Produto')['Pre√ßo'].sum()
faturamento_categoria_loja4 = loja4.groupby('Categoria do Produto')['Pre√ßo'].sum()

# Unificando em um √∫nico DataFrame
df_comparativo = pd.DataFrame({
    'Loja 1': faturamento_categoria_loja1,
    'Loja 2': faturamento_categoria_loja2,
    'Loja 3': faturamento_categoria_loja3,
    'Loja 4': faturamento_categoria_loja4
})

# Substituir NaNs por 0, caso uma loja n√£o tenha vendido uma categoria espec√≠fica
df_comparativo = df_comparativo.fillna(0)

# Exibindo a tabela completa
print("\nFaturamento por Categoria de Produto (Comparativo entre Lojas):\n")
print(df_comparativo)



"""# 3. M√©dia de Avalia√ß√£o das Lojas"""

#Calculando a media das avaliacoes das lojas
avaliacao_loja1 = loja['Avalia√ß√£o da compra'].sum()/len(loja)
avaliacao_loja2 = loja2['Avalia√ß√£o da compra'].sum()/len(loja2)
avaliacao_loja3 = loja3['Avalia√ß√£o da compra'].sum()/len(loja3)
avaliacao_loja4 = loja4['Avalia√ß√£o da compra'].sum()/len(loja4)

avaliacoes = [avaliacao_loja1, avaliacao_loja2, avaliacao_loja3, avaliacao_loja4]
minimo_aval = min(avaliacoes)
maximo_aval = max(avaliacoes)

print("A avalicao media de cada loja corresponde a:\n")
print(f"Loja 1: {avaliacao_loja1:,.2f}")
print(f"Loja 2: {avaliacao_loja2:,.2f}")
print(f"Loja 3: {avaliacao_loja3:,.2f}")
print(f"Loja 4: {avaliacao_loja4:,.2f}\n")

print(f"Sendo o menor resultado {minimo_aval:,.2f} e o maior resultado: {maximo_aval:,.2f}")


#



"""# 4. Produtos Mais e Menos Vendidos"""

# Venda de cada produto por loja - Visualizacao por loja
produtos_vendidos_loja1 = loja.groupby('Produto').agg(quant_vendida=('Produto', 'count'), faturamento=('Pre√ßo', 'sum')).sort_values(by='quant_vendida', ascending=False)
produtos_vendidos_loja2 = loja2.groupby('Produto').agg(quant_vendida=('Produto', 'count'), faturamento=('Pre√ßo', 'sum')).sort_values(by='quant_vendida', ascending=False)
produtos_vendidos_loja3 = loja3.groupby('Produto').agg(quant_vendida=('Produto', 'count'), faturamento=('Pre√ßo', 'sum')).sort_values(by='quant_vendida', ascending=False)
produtos_vendidos_loja4 = loja4.groupby('Produto').agg(quant_vendida=('Produto', 'count'), faturamento=('Pre√ßo', 'sum')).sort_values(by='quant_vendida', ascending=False)

#Produtos mais vendidos e menos vendidos de cada loja

mais_vendido_loja1 = produtos_vendidos_loja1['quant_vendida'].idxmax()
menos_vendido_loja1 = produtos_vendidos_loja1['quant_vendida'].idxmin()
quantidade_mais_vendido_loja1 = produtos_vendidos_loja1.loc[mais_vendido_loja1, 'quant_vendida']
quantidade_menos_vendido_loja1 = produtos_vendidos_loja1.loc[menos_vendido_loja1, 'quant_vendida']

mais_vendido_loja2 = produtos_vendidos_loja2['quant_vendida'].idxmax()
menos_vendido_loja2 = produtos_vendidos_loja2['quant_vendida'].idxmin()
quantidade_mais_vendido_loja2 = produtos_vendidos_loja2.loc[mais_vendido_loja2, 'quant_vendida']
quantidade_menos_vendido_loja2 = produtos_vendidos_loja2.loc[menos_vendido_loja2, 'quant_vendida']

mais_vendido_loja3 = produtos_vendidos_loja3['quant_vendida'].idxmax()
menos_vendido_loja3 = produtos_vendidos_loja3['quant_vendida'].idxmin()
quantidade_mais_vendido_loja3 = produtos_vendidos_loja3.loc[mais_vendido_loja3, 'quant_vendida']
quantidade_menos_vendido_loja3 = produtos_vendidos_loja3.loc[menos_vendido_loja3, 'quant_vendida']

mais_vendido_loja4 = produtos_vendidos_loja4['quant_vendida'].idxmax()
menos_vendido_loja4 = produtos_vendidos_loja4['quant_vendida'].idxmin()
quantidade_mais_vendido_loja4 = produtos_vendidos_loja4.loc[mais_vendido_loja4, 'quant_vendida']
quantidade_menos_vendido_loja4 = produtos_vendidos_loja4.loc[menos_vendido_loja4, 'quant_vendida']

print(f"O produto mais vendido na loja 1 foi {mais_vendido_loja1.upper()} com {quantidade_mais_vendido_loja1} unidades vendidas, enquanto o produto menos foi {menos_vendido_loja1.upper()} com {quantidade_menos_vendido_loja1} unidades vendidas")
print(f"O produto mais vendido na loja 2 foi {mais_vendido_loja2.upper()} com {quantidade_mais_vendido_loja2} unidades vendidas, enquanto o produto menos foi {menos_vendido_loja2.upper()} com {quantidade_menos_vendido_loja2} unidades vendidas")
print(f"O produto mais vendido na loja 3 foi {mais_vendido_loja3.upper()} com {quantidade_mais_vendido_loja3} unidades vendidas, enquanto o produto menos foi {menos_vendido_loja3.upper()} com {quantidade_menos_vendido_loja3} unidades vendidas")
print(f"O produto mais vendido na loja 4 foi {mais_vendido_loja4.upper()} com {quantidade_mais_vendido_loja4} unidades vendidas, enquanto o produto menos foi {menos_vendido_loja4.upper()} com {quantidade_menos_vendido_loja4} unidades vendidas")

#ANALISE GERAL

produtos_todas_lojas = pd.concat([
    loja['Produto'],
    loja2['Produto'],
    loja3['Produto'],
    loja4['Produto']
])

# Retorna tupla com (nome_produto, qtd)
mais_vendido = quant_produtos_todas_lojas[quant_produtos_todas_lojas == quant_produtos_todas_lojas.max()]
menos_vendido = quant_produtos_todas_lojas[quant_produtos_todas_lojas == quant_produtos_todas_lojas.min()]

# Exibir
print("üîù Produto(s) mais vendido(s):")
print(mais_vendido)

print("\nüîΩ Produto(s) menos vendido(s):")
print(menos_vendido)



"""# 5. Frete M√©dio por Loja

"""



